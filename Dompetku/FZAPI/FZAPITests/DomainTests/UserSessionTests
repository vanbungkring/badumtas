//
//  UserSessionTests.m
//  FZAPI
//
//  Created by Matthieu Barile on 22/07/2014.
//  Copyright (c) 2014 Google. All rights reserved.
//

#import <XCTest/XCTest.h>

#import "UserSession.h"

@interface UserSessionTests : XCTestCase

@end

@implementation UserSessionTests

- (void)setUp {
    [super setUp];
    // Put setup code here. This method is called before the invocation of each test method in the class.
}

- (void)tearDown {
    // Put teardown code here. This method is called after the invocation of each test method in the class.
    [super tearDown];
}

/*
 - (id)init
 */
- (void)testUserSessionInit {
    UserSession *session = [UserSession currentSession];
    
    XCTAssertNotNil(session, @"UserSession : can't instantiate current session");
    
    XCTAssertNil([session userKey],@"UserSession : userKey");//USER_KEY
    
    XCTAssertEqual([session timeout], 2, @"UserSession : no default timeout");//TIMEOUT

    XCTAssertNil([session validUrls], @"UserSession : valid urls");
}

/*
- (void)storeUserKey:(NSString *)userKey;
 */
- (void)testUserStoreUserKey {
    UserSession *session = [UserSession currentSession];
    

}


/*
- (void)storeAcceptedEula:(BOOL)storeEula;
 */
- (void)testUserStoreAcceptedEula {
    UserSession *session = [UserSession currentSession];
    

}


/*
- (void)storeTimeout:(int)timeout;
*/
- (void)testUserStoreTimeout {
    UserSession *session = [UserSession currentSession];
    
    
}


/*
- (void)storeEnvironment:(NSString *)environment;
 */
- (void)testUserStoreEnvironment {
    UserSession *session = [UserSession currentSession];
    
    
}


/*
- (NSString *)emailAfterStoredEnvironmentWithTypedEmail:(NSString *)email;
*/
- (void)testUserEmailAfterStoredEnvironmentWithTypedEmail {
    UserSession *session = [UserSession currentSession];
    
    
}


/*
- (void)storeEnvironmentWithEnvironment:(NSString *)environment;
*/
- (void)testUserStoreEnvironmentWithEnvironment {
    UserSession *session = [UserSession currentSession];
    
    
}


/*
- (void)addProgramIdToFidelitizBlackList:(NSString *)programId;
*/
- (void)testUserAddProgramIdToFidelitizBlackList {
    UserSession *session = [UserSession currentSession];
    
    
}


/*
- (void)clearFidelitizBlackList;
*/
- (void)testUserClearFidelitizBlackList {
    UserSession *session = [UserSession currentSession];
    
    
}


/*
- (NSString *)shortEnvironmentValue;
*/
- (void)testUserhortEnvironmentValue {
    UserSession *session = [UserSession currentSession];
    
    
}


/*
- (NSString*)environment;
*/



/*
- (UIImage *)avatarWithDefaultImage:(UIImage *)defaultImage;
 */



/*
- (void) reloadAvatarWithDefaultImage:(UIImage *)defaultImage;
*/

@end
